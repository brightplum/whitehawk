<?php

/**
 * This is example code for a Drupal 6 to Drupal 7 migration. This won't actually
 * work without defining the referenced vocabularies, content types, and fields
 * on each side.
 */

/**
 * Implements hook_flush_caches().
 */
function whg_migrate_flush_caches() {
  whg_migrate_register_migrations();
}

/**
 * Register all D6->D7 migrations.
 */
function whg_migrate_register_migrations() {
  /**
   * Each migration being registered takes an array of arguments, some required
   * and some optional. Start with the common arguments required by all - the
   * source_connection (connection key, set up in settings.php, pointing to
   * the Drupal 6 database) and source_version (major version of Drupal).
   */
  $common_arguments = array(
    'source_connection' => 'legacy',
    'source_version' => 6,
  );

  // Migrate roles
  $role_arguments = $common_arguments + array(
    'machine_name' => 'WHGRole',
    'description' => t('Import Drupal 6 roles'),
    'role_mappings' => array(
      'administrator' => 'administrator',
      'super administrator' => 'administrator',
      'coach' => 'Coach',
      'case manager' => 'Case Manager',
      'client' => 'Client',
      'reviewer' => 'Reviewer',
    ),
  );
  Migration::registerMigration('DrupalRole6Migration',
    $role_arguments['machine_name'], $role_arguments);

  $arguments = $common_arguments + array(
    'description' => t('Migration of users from Drupal 6'),
    'machine_name' => 'WHGUser',
  );

  Migration::registerMigration('WHGUserActualMigration',
    $arguments['machine_name'], $arguments);

  $record_arguments = $common_arguments + array(
    'description' => t('Migration of record to user data'),
    'machine_name' => 'WHGRecord',
  );

  Migration::registerMigration('WHGRecordMigration',
    $record_arguments['machine_name'], $record_arguments);

  $name_arguments = $common_arguments + array(
    'description' => t('Migration of name, legacy record to user data'),
    'machine_name' => 'WHGName',
  );

  Migration::registerMigration('WHGNameMigration',
    $name_arguments['machine_name'], $name_arguments);

  $node_arguments = $common_arguments + array(
    'class_name' => 'WHGCMRMigration',
    'description' => t('Migration of CMR nodes from Drupal 6'),
    'machine_name' => 'WHGCMR',
    'source_type' => 'case_management_report',
    'destination_type' => 'cmr',
    'user_migration' => 'WHGUser'
  );

  Migration::registerMigration($node_arguments['class_name'],
    $node_arguments['machine_name'], $node_arguments);

  $profile_arguments = $common_arguments + array(
    'description' => t('Migration of member profile to user data'),
    'machine_name' => 'WHGProfile',
  );

  Migration::registerMigration('WHGProfileMigration',
    $profile_arguments['machine_name'], $profile_arguments);
}

/**
 * Implements hook_migrate_api().
 */
function whg_migrate_migrate_api() {
  $api = array(
    'api' => 2,
  );
  return $api;
}

/**
 * Retrieve the new id from the old id
 */
function whg_migrate_get_new_id($class, $id) {
  $query = db_select('migrate_map_' . $class, 'm')
    ->fields('m', array('destid1'))
    ->condition('m.sourceid1', $id, '=');
  $result = $query->execute();
  $output = '';
  foreach ($result as $row) {
    $output = $row->destid1;
  }

  return $output;
}
